[{"/home/crochet/Bureau/Cours react/twitchclonereact/src/App.js":"1","/home/crochet/Bureau/Cours react/twitchclonereact/src/index.js":"2","/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Header/Header.js":"3","/home/crochet/Bureau/Cours react/twitchclonereact/src/reportWebVitals.js":"4","/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Sidebar/Sidebar.js":"5","/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Games/Games.js":"6","/home/crochet/Bureau/Cours react/twitchclonereact/src/api.js":"7","/home/crochet/Bureau/Cours react/twitchclonereact/src/components/TopStreams/TopStreams.js":"8","/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Live/Live.js":"9","/home/crochet/Bureau/Cours react/twitchclonereact/src/components/GameStreams/GameStreams.js":"10","/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Resultats/Resultats.js":"11","/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Erreur/Erreur.js":"12"},{"size":1128,"mtime":1612452608622,"results":"13","hashOfConfig":"14"},{"size":478,"mtime":1609947711184,"results":"15","hashOfConfig":"14"},{"size":3207,"mtime":1612367419982,"results":"16","hashOfConfig":"14"},{"size":362,"mtime":1609947524191,"results":"17","hashOfConfig":"14"},{"size":3573,"mtime":1612452946994,"results":"18","hashOfConfig":"14"},{"size":1832,"mtime":1610981790892,"results":"19","hashOfConfig":"14"},{"size":585,"mtime":1610373072671,"results":"20","hashOfConfig":"14"},{"size":3852,"mtime":1610548832153,"results":"21","hashOfConfig":"14"},{"size":2200,"mtime":1612450160202,"results":"22","hashOfConfig":"14"},{"size":3452,"mtime":1612362966675,"results":"23","hashOfConfig":"14"},{"size":2042,"mtime":1612452226145,"results":"24","hashOfConfig":"14"},{"size":426,"mtime":1612452646234,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wzyi6r",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/crochet/Bureau/Cours react/twitchclonereact/src/App.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/index.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Header/Header.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/reportWebVitals.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Sidebar/Sidebar.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Games/Games.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/api.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/components/TopStreams/TopStreams.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Live/Live.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/components/GameStreams/GameStreams.js",["51"],"import React, {useState, useEffect} from 'react';\nimport api from '../../api';\nimport {Link, useLocation, useParams} from 'react-router-dom';\n\nexport default function GameStreams(){\n\n    let location = useLocation();\n        console.log(location);\n\n    let {slug} = useParams();   \n    \n\n\n    const [streamData,setStreamData] = useState([]);\n    const [viewers, setViewers] = useState(0);\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n            const result = await api.get(\n                `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`\n            );\n            let dataArray = result.data.data;\n\n            let finalArray = dataArray.map(stream => {\n                let newURL = stream.thumbnail_url\n                .replace('{width}', \"320\")\n                .replace('{height}', \"180\");\n                stream.thumbnail_url = newURL;\n                return stream;\n            })\n\n            // Algo Sum Viewers\n            let totalViewers = finalArray.reduce((acc, val) => {\n                return acc + val.viewer_count;\n            }, 0);\n\n            let userIDs = dataArray.map(stream => {\n                return stream.user_id;\n            })\n\n            let baseUrl = \"https://api.twitch.tv/helix/users?\";\n            let queryParamsUsers = \"\";\n\n            userIDs.map(id => {\n                return (queryParamsUsers = queryParamsUsers + `id=${id}&`)\n            })\n            let finalUrl = baseUrl + queryParamsUsers;\n\n            let getUsersLogin = await api.get(finalUrl);\n            \n            let userLoginArray = getUsersLogin.data.data;\n\n            finalArray = dataArray.map(stream => {\n\n                stream.login = \"\";\n\n                userLoginArray.forEach(login => {\n                    if(stream.user_id === login.id) {\n                        stream.login = login.login;\n                    }\n                })\n\n                return stream;\n            })\n\n            setViewers(totalViewers);\n            setStreamData(finalArray)\n        }\n\n        fetchData();\n    }, [location.state.gameID])\n\n    console.log(viewers);\n    console.log(streamData);\n\n\n    return (\n        <div>\n           <h1 className=\"titreGamesStreams\">Streams : {slug}</h1>\n           <h3 className=\"sousTitreGamesStreams\">\n               <strong className=\"textColored\">{viewers} personnes regarde {slug}</strong>\n           </h3>\n\n           <div className=\"flexAccueil\">\n\n                {streamData.map ((stream,index) => (\n                    <div key={index} className=\"carteGamesStreams\">\n                        <img src={stream.thumbnail_url} alt=\"jeu carte image\" className=\"imgCarte\"/>\n\n                        <div className=\"cardBodyStreams\">\n                            <h5 className=\"titreCartesStream\">{stream.user_name}</h5>\n                            <p className=\"txtStream\">Nombre de viewers : { stream.viewer_count}</p>\n\n                            <Link\n                            className =\"lien\"\n                            to = {{\n                                pathname: `/live/${stream.login}`\n                            }}\n                            >\n                            <div className=\"btnCarte\">Regarder {stream.user_name}</div>\n                            \n                            \n                            </Link>\n                        </div>\n                    </div>\n                ))}\n\n           </div>\n        </div>\n    )\n}\n","/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Resultats/Resultats.js",[],"/home/crochet/Bureau/Cours react/twitchclonereact/src/components/Erreur/Erreur.js",[],{"ruleId":"52","severity":1,"message":"53","line":89,"column":25,"nodeType":"54","endLine":89,"endColumn":101},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]